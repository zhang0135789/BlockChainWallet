# 开发环境配置
server:
  # 服务器的HTTP端口，默认为8080
  port: 10093
  servlet:
    # 应用的访问路径
    context-path: /erc20-usdt
  tomcat:
    # tomcat的URI编码
    uri-encoding: UTF-8
    # tomcat最大线程数，默认为200
    max-threads: 800
    # Tomcat启动初始化的线程数，默认值25
    min-spare-threads: 30

# Spring配置
spring:
  application:
    name: service-rpc-erc20-usdt
  data:
    mongodb:
      uri: mongodb://8.129.44.191:27017/db_wallet
#      uri: mongodb://wallet:123456@43.128.23.74:27017/db_wallet

      #more ip cluster
      #uri=mongodb://user:pwd@ip1:port1,ip2:port2/database
      username: admin
      password: 123456

# 日志配置
logging:
  level:
    com.feel: debug
    org.springframework: warn

# Swagger配置
swagger:
  # 是否开启swagger
  enabled: true
  # 请求前缀
  pathMapping: /

coin:
  #节点地址  http://localhost:8545/
#  rpc: "http://43.128.34.237:8485"
  # 测试网络
  rpc: "http://localhost:8545/"
  #token名称
  name: EUSDT
  #单位
  unit: EUSDT
  #节点密码
  password:
  #
  step: 10
  #初始化扫描块高
  init-block-height: 50000
  # 提现/手续费 地址
  withdraw-address: "0x5ac6e22b5112728e4db5145eaff0e64671df09b7"
  # 提现/手续费钱包密码
  withdraw-wallet-password: ""
  # 提现/手续费钱包
  withdraw-wallet: "UTC--2021-04-14T06-16-08.534000000Z--5ac6e22b5112728e4db5145eaff0e64671df09b7.json"
  # 归集地址
  collection-address: "0x6323297987278Bc22a114d2c6E2a995abD9D98D5"
  #默认矿工费
  default-miner-fee: "0.0001"
  # 最小归集金额
  min-collect-amount: 50
  # keystore存放地址
  keystore-path: /home/zz/data/eth/data/keystore
  #手续费
  gas-limit: "50000"


# 合约配置
contract:
  #erc20-usdt合约地址 0xdac17f958d2ee523a2206206994597c13d831ec7
  #address: "0xdac17f958d2ee523a2206206994597c13d831ec7"
  # 测试合约
  address: "0x8CaCa77007c0D7f689e05A9B230A717962881fb0"
  #合约单位
  #wei:0,kwei:3,wwei:4,mwei:6,gwei:9,szabo:12,finney:15,ether:18,kether:21,mether:24,gether:27
  decimals: "mwei"
  #手续费
  gas-limit: "50000"

etherscan:
  token: BYFVKAANT5JVQPURWJMUAEUFCKGZ56P68

# 扫快规则
rule:
  # 初始化区块高度
  initBlockHeight: "latest"
#  initBlockHeight: 12230000
  #扫描间隔时间
  interval: 5000
  #间隔区块
  step: 6
  #确认次数
  confirmation: 3


#归集任务
collection:
  # 每两个小时检查一次
  collectionCoin: "0 0 */2 * * ?"
#  collectionCoin: "0 0/2 * * * ?"
  # 每3个小时检查一次
  checkAccount: "0 0 */3 * * ?"
#  checkAccount: "0 0/2 * * * ?"

